/*https://practice.geeksforgeeks.org/problems/nearly-sorted-algorithm/0
Given an array of n elements, where each element is at most k away from its target position. The task is to print array in sorted form.

Input:
First line consists of T test cases. First line of every test case consists of two integers N and K, denoting number of elements in array and at most k positions away from its target position respectively. Second line of every test case consists of elements of array.

Output:
Single line output to print the sorted array.

Constraints:
1<=T<=100
1<=N<=100
1<=K<=N

Example:
Input:
2
3 3
2 1 3
6 3
2 6 3 12 56 8
Output:
1 2 3
2 3 6 8 12 56*/




#include<iostream>
#include<bits/stdc++.h>
using namespace std;
int main()
 {
	//code
	int i,j;
	int t;
	cin>>t;
	for(i=0;i<t;i++)
    {
        int n,k;
        cin>>n>>k;
        vector<int>v;
        vector<int>out;
        priority_queue<int,vector<int>,greater<int>>pq;
        for(j=0;j<n;j++)
        {
            int a;
            cin>>a;
            v.push_back(a);
        }
        for(j=0;j<k+1 && j<n;j++)
        {
            pq.push(v[j]);
        }
        for(j=k+1;j<n;j++)
        {
            out.push_back(pq.top());
            pq.pop();
            pq.push(v[j]);
        }
        while(pq.size()!=0)
        {
            out.push_back(pq.top());
            pq.pop();
        }
        for(auto f:out)
        {
            cout<<f<<" ";
        }
        cout<<"\n";
    }

	
	return 0;
}
